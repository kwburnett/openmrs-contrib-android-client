apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.github.triplet.play'
apply plugin: 'me.tatarka.retrolambda'

buildscript {

	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.github.triplet.gradle:play-publisher:1.1.5'
		classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
	}
}

// Constants for app version and version code
def app_version = "1.0.1"	// The version number displayed to users
def app_version_code = 2	// The internal version number, higher is more recent

def keystoreFile = "bandahealth.jks"

// Get the keystore.properties file location, first looking for the environment property
def keystorePropertiesFilePath = System.getenv('BANDA_IM_KEYSTORE_FILE')
if (keystorePropertiesFilePath == null || keystorePropertiesFilePath.toString().length() == 0) {
	// If the environment property is not defined then assume that the file in the root project folder has been configured
	keystorePropertiesFilePath = rootDir.toString() + "/keystore.properties"
}

// Create a variable called keystorePropertiesFile, and initialize it to the keystore.properties file
def keystorePropertiesFile = file(keystorePropertiesFilePath)

// Initialize a new Properties() object and fill with keystore properties
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
	project.logger.lifecycle("Loading keystore properties file (" + keystorePropertiesFilePath + ")")
	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
	project.logger.lifecycle("Could not find keystore properties file at " + keystorePropertiesFilePath)
}

android {
	compileSdkVersion 25
	buildToolsVersion '25.0.0'
	useLibrary 'org.apache.http.legacy'

	def applicationVersion = app_version;

	defaultConfig {
		applicationId "org.openmrs.bandahealth.im"
		versionName applicationVersion
		versionCode app_version_code

		testApplicationId "org.openmrs.mobile.test"
		testInstrumentationRunner "org.openmrs.mobile.test.OpenMRSInstrumentationTestRunner"

		minSdkVersion 16
		targetSdkVersion 23
	}

	signingConfigs {
		release {
			keyAlias keystoreProperties['keyAlias']
			keyPassword keystoreProperties['keyPassword']
			storeFile rootProject.file(keystoreFile)
			storePassword keystoreProperties['storePassword']
		}
	}

	buildTypes {
		release {
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
			signingConfig signingConfigs.release
		}
	}

	lintOptions {
		warning 'InvalidPackage'
		abortOnError false
	}

	dataBinding {
		enabled = true
	}

	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/DEPENDENCIES.txt'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/NOTICE.txt'

	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

repositories {
	maven { url 'http://yanzm.github.io/MaterialTabHost/repository' }
	mavenCentral()
	jcenter()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://jitpack.io" }
}

def dbflow_version = "4.1.1"
def sqlcipher_version = "3.5.7"

dependencies {
	compile 'com.google.code.gson:gson:2.7'
	apt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
	
	compile 'com.google.dagger:dagger-android:2.11'
	apt 'com.google.dagger:dagger-android-processor:2.11'
	apt 'com.google.dagger:dagger-compiler:2.11'
	androidTestApt 'com.google.dagger:dagger-compiler:2.11'
	testApt 'com.google.dagger:dagger-compiler:2.11'

	androidTestCompile(
			'org.mockito:mockito-core:1.10.19',
			'com.google.dexmaker:dexmaker-mockito:1.0',
			'com.google.dexmaker:dexmaker:1.0',
			'com.jayway.android.robotium:robotium-solo:4.2'
	)
	androidTestCompile files('libs/the-missing-android-xml-junit-test-runner-release-1.3_2.jar')
	compile 'com.google.guava:guava:20.0'
	compile 'com.android.support:appcompat-v7:25.3.1'
	compile 'com.android.support:gridlayout-v7:25.3.1'
	compile 'com.android.support:cardview-v7:25.3.1'
	compile 'com.android.support:recyclerview-v7:25.3.1'
	compile 'com.android.support:design:25.3.1'
	compile 'com.android.support:support-v13:25.3.1'
	compile 'com.android.support:support-annotations:25.3.1'
	compile 'com.squareup.retrofit2:retrofit:2.0.2'
	compile 'com.squareup.retrofit2:converter-gson:2.0.2'
	compile 'org.apache.httpcomponents:httpcore:4.4.4'
	compile 'org.apache.httpcomponents:httpmime:4.5.2'
	compile 'net.yanzm:mth:1.0.4'
	compile 'net.zetetic:android-database-sqlcipher:3.5.1@aar'
	compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
	compile 'joda-time:joda-time:2.0'
	compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
	compile 'com.github.clans:fab:1.6.4'
	compile 'com.google.android:flexbox:0.1.3'
	compile 'org.greenrobot:eventbus:3.0.0'
	apt 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
	compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
	compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
	
	// sql-cipher database encryption (optional)

	//compile "com.github.Raizlabs.DBFlow:dbflow-sqlcipher:${dbflow_version}"

	//compile "net.zetetic:android-database-sqlcipher:${sqlcipher_version}@aar"
	testCompile(
			'org.mockito:mockito-core:1.10.19',
			'junit:junit:4.12',
			'org.powermock:powermock-api-mockito:1.6.6',
			'org.powermock:powermock-module-junit4:1.6.6'
	)

	testCompile 'org.robolectric:robolectric:3.3.2'
}
